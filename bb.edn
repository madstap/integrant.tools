{:tasks
 {test (apply clojure "-Srepro -M:test -m kaocha.runner" *command-line-args*)

  clean (shell "rm -f integrant.tools.jar")

  build (clojure "-X:jar")

  deploy {:depends [clean]
          :requires ([rewrite-clj.zip :as zip]
                     [clojure.string :as str]
                     [babashka.process :as proc])
          :task (let [version (first *command-line-args*)
                      new-deps-edn (-> (zip/of-string (slurp "deps.edn"))
                                       (zip/get :aliases)
                                       (zip/get :jar)
                                       (zip/get :exec-args)
                                       (zip/assoc :version version)
                                       (zip/root-string))
                      deploy-token (slurp "deploy_token")
                      clean-workdir? (-> (proc/sh ["git" "status" "--porcelain"])
                                         :out
                                         str/blank?)
                      on-main? (-> (proc/sh ["git" "branch" "--current-branch"])
                                   :out
                                   (= "main"))]
                  (assert version "Need to specify a version")
                  (assert on-main? "Need to be on main")
                  (assert clean-workdir?
                          "Need to have a clean working directory to deploy.")

                  (shell "bb test --no-watch")
                  (spit "deps.edn" new-deps-edn)

                  (println "Building jar")
                  (shell "bb build")

                  (println "Deploying to clojars")
                  (shell {:env {"CLOJARS_USERNAME" "madstap"
                                "CLOJARS_PASSWORD" deploy-token}}
                         "clojure -X:deploy")

                  (println "Committing and pushing changes")
                  (shell "git add .")
                  (shell (str "git commit -m " "'Release version " version "'"))
                  (shell "git push"))}}}
